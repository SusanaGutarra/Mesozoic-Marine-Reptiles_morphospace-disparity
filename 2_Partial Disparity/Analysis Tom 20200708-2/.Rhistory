box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.axis=1.2,
cex.ts=1,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.axis=1.5,
cex.ts=1,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
#cex.axis=1.5,
cex.ts=1,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1.2,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
angle.age =90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 1,
angle.age =90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
ttest <-test.dispRity(timedisparity,
test = t.test,
comparisons = "sequential",
correction = "bonferroni") #corrected
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.5,
angle.age =90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
angle.age =90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
arotate=0,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
arotate=90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
erotate=90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
ttest <-test.dispRity(timedisparity,
test = t.test,
comparisons = "sequential",
correction = "bonferroni") #corrected
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
erotate=0,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
urotate=0,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =1,        #Size of labels in axis
cex.pt = 0.7,
urotate=90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
cex.pt = 0.7,
urotate=90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=0.8,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
cex.pt = 0.7,
urotate=90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
cex.pt = 0.7,
urotate=90,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
##some taxa span various time-bins
##Read the pc.scores dataset with duplicated taxa with different names (Taxon / Taxon_d)
#MAKE SURE THIS FILE IS UPDATED:
#pcscores-dup.csv is a file created by duplicating some taxa in the original pc.scores
pc.scores <- read.csv("pcscores-dup.csv",
row.names=1,
header=T)
pc.scores <- as.matrix(pc.scores)
pc.scores
#Create list of taxa per time bin (column 19)
#This list needs to come from the file with taxa duplicated with different names (Taxon / Taxon_d)
#so that it matches the same names as in the new pc.scores
dframe2<-read.csv("FossilAqReptiles_data_dup.csv",
row.names = 1,
header=T)
dframe2
#Exclude incomplete rows
dframe2<-na.exclude(dframe2)
dframe2
#Create a subset of the data
dframe2<- subset(dframe2,Group_1 %in% c("Ichthyosauromorpha"))
dframe2
#Assess number of bins/groups there are in Time_2
#(there should be 8, no Ichthyosauromorpha in Late Cretaceous. Including the category "DUP" not to be accounted for)
groups_bins <- with( dframe2,
list(
groups = unique(Group_1),
bins   = unique(Time_2)
))
sapply(groups_bins, length)
EarlyTriassic_list <- row.names(dframe2)[dframe2[,19] == 'Early_Triassic']  # change names of groups to match your data
EarlyTriassic_list
MidTriassic_list <- row.names(dframe2)[dframe2[,19] == 'Mid_Triassic']  # change names of groups to match your data
MidTriassic_list
LateTriassic_list <- row.names(dframe2)[dframe2[,19] == 'Late_Triassic']  # change names of groups to match your data
LateTriassic_list
EarlyJurassic_list <- row.names(dframe2)[dframe2[,19] == 'Early_Jurassic']  # change names of groups to match your data
EarlyJurassic_list
LateJurassic_list <- row.names(dframe2)[dframe2[,19] == 'Late_Jurassic']  # change names of groups to match your data
LateJurassic_list
EarlyCretaceous_list <- row.names(dframe2)[dframe2[,19] == 'Early_Cretaceous']  # change names of groups to match your data
EarlyCretaceous_list
LateJurassicEarlyCretaceous_list<- append(LateJurassic_list,EarlyCretaceous_list)
LateJurassicEarlyCretaceous_list
#Create data grouped by time bins
time.groups <- list(EarlyTriassic_list, MidTriassic_list,LateTriassic_list,EarlyJurassic_list,LateJurassicEarlyCretaceous_list)
names(time.groups) <- c("Early Triassic","Middle Triassic","Late Triassic","Early Jurassic", "Late Jurassic-Early Cretaceous")
time.groups
timedisparity <- dispRity.per.group(pc.scores,
group = time.groups,
metric = c(sum, variances))
timedisparity
summary(timedisparity)
## Converting the data into a list
data_obs <- extract.dispRity(timedisparity, observed = TRUE)
data_distribution <- extract.dispRity(timedisparity, observed = FALSE)
## Removing one list level
data_distribution <- unlist(data_distribution, recursive = FALSE)
data_obs <- as.vector(data_obs)
#assigning numerical values to the ages
ages <- c(250, 242.1, 219.1, 187.7, 132)
ages
## Plotting the results distribution: THIS PIECE OF CODE IS A BIT BUGGY
geoscaleBox(data_distribution, ages,
boxes = "Epoch",
data.lim = c(0,10),  #limits of the y axis
age.lim= c(251,66),  #limits of the x axis
units=c("Period"),   #time units shown in geological scale
box.width=3,         #width of the boxplot in millions of years
tick.scale = 50,     #Time scale resolution.
label="Disparity (sum of variances)",   #y axis label
cex.ts=1,            #Size of time scale labels.
cex.age =0.6,        #Size of labels in axis
cex.pt = 0.7,
ts.col=F,            #Whether to include colours in the timescale.
ts.width=0.2)    +    #thickness of the time scale
box(lwd=0.8)
setwd("~/Dropbox/PhD Bristol_MESOZOIC MARINE REPTILES/CHAPTER 5_Morphospace/Morphospace_Analysis 2020 June/PARTIAL DISPARITY/Analysis Tom 20200708-2")
# makes function for nice scale bar - made by Ben
xAxisPeriods <- function (cex = 1.0) {
# Plots boxes with geological period labels along the x-axis.
# Only for periods of the Mesozoic so far.
#
# Args:
#   cex: character expansion of labels
#
# Returns:
#   In plots, an x-axis with boxes for each geological period, labels, and
#   time on the x-axis.
# get x-axis extent
axis.bottom <- par()$usr[3] - 0.1 * diff(par()$usr[3:4])
axis.top <- par()$usr[3]
# plot x-axis
axis(1, pos = axis.bottom)
# plot period boxes
# Triassic
rect(min(par()$usr[1], 252.17), axis.bottom, 201.3, axis.top,
col = "white", border = TRUE, xpd = NA)
text(mean(c(min(par()$usr[1], 252.17), 201.3)),
mean(c(axis.bottom, axis.top)),
"TRIASSIC",
adj = c(0.5, 0.5), cex = cex, xpd = NA)
# Jurassic
rect(201.3, axis.bottom, 145, axis.top,
col = "white", border = TRUE, xpd = NA)
text(mean(c(201.3, 145)),
mean(c(axis.bottom, axis.top)),
"JURASSIC",
adj = c(0.5, 0.5), cex = cex, xpd = NA)
# Cretaceous
rect(145, axis.bottom, max(par()$usr[2], 66.0), axis.top,
col = "white", border = TRUE, xpd = NA)
text(mean(c(145, max(par()$usr[2], 66.0))),
mean(c(axis.bottom, axis.top)),
"CRETACEOUS",
adj = c(0.5, 0.5), cex = cex, xpd = NA)
# tidy up box around
rect(par()$usr[1], axis.bottom, par()$usr[2], axis.top,
col = NA, border = TRUE, xpd = NA)
# tidy up box around
rect(par()$usr[1], axis.bottom, par()$usr[2], axis.top,
col = NA, border = TRUE, xpd = NA)
}
# plot partial disparity data from MATLAB MDA analysis
library(scales)
pd.data <- read.table ("PD_RESULTS_R.txt", header = T, row.names = 1)
pd.data
midpoints <-  c(251, 242, 220, 190, 168, 155, 125, 83)
nbins <- length(midpoints)
ngroups <- ncol(pd.data)
relative.disparity = array (dim = c(nbins, ngroups)) # This creates an empty array of the proper proportions
colnames(pd.data)
pd.data[is.na(pd.data)] <- 0
#the below script claculate the relative disparities/diversities ready  for plotting
for (i in 1:nrow(pd.data))
{
relative.disparity [i, ] = c(pd.data[i, "Ichthyosauromorpha"], pd.data[i, "Sauropterygia"], pd.data[i, "Thalattosauria"], pd.data[i, "Other"], pd.data[i, "Pantestudines"], pd.data[i, "Thalattosuchia"], pd.data[i, "Rhynchocephalia"], pd.data[i, "Mosasauroidea"])
relative.disparity[i, ] = cumsum(relative.disparity [i, ])
relative.disparity [i, ] = relative.disparity [i, ]/relative.disparity [i, ngroups]
}
colnames(pd.data)
colnames(relative.disparity) <- colnames(pd.data)
x.limits <- c(252, 66)
y.limits <- c(0.02, .98) ## will leave tiny gaps at top and bottom - for aesthetics
plot (midpoints, y = c(rep(0.8,length(midpoints))), xlim = x.limits, ylim = y.limits, xaxt='n', col = "transparent", xlab = "", ylab = paste("Partial disparity" , sep=""))
abline(v=201.3, lwd=2, col="gray70")
abline(v=145, lwd=2, col="gray70")
abline(v=66, lwd=2, col="gray70")
colnames(pd.data)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Mosasauroidea"], 0)
polygon (coordinates.x, coordinates.y, col = "#FF8300", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Rhynchocephalia"], 0)
polygon (coordinates.x, coordinates.y, col = "#c061ff", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Thalattosuchia"], 0)
polygon (coordinates.x, coordinates.y, col = "blue", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Pantestudines"], 0)
polygon (coordinates.x, coordinates.y, col = "#009ccc", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Other"], 0)
polygon (coordinates.x, coordinates.y, col = "gray70", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Thalattosauria"], 0)
polygon (coordinates.x, coordinates.y, col = "#FFD300", border = NA)
coordinates.x <- c(midpoints[1], midpoints,midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Sauropterygia"], 0)
polygon (coordinates.x, coordinates.y, col = "#19D27E", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Ichthyosauromorpha"], 0)
polygon (coordinates.x, coordinates.y, col = "#FF2626", border = NA)
lines(midpoints, relative.disparity[,1], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,2], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,3], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,4], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,5], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,6], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,7], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,8], lty=1, lwd=0.8,col = "white")
xAxisPeriods()
dev.copy(pdf,"Partial_disparity_new.pdf", width=6, height=3.5)
dev.off()
dev.copy(pdf,"Partial_disparity_new.pdf", width=6, height=3)
dev.off()
plot.new ()
x.limits <- c(252, 66)
y.limits <- c(0.02, .98) ## will leave tiny gaps at top and bottom - for aesthetics
plot (midpoints, y = c(rep(0.8,length(midpoints))), xlim = x.limits, ylim = y.limits, xaxt='n', col = "transparent", xlab = "", ylab = paste("Partial disparity" , sep=""))
abline(v=201.3, lwd=2, col="gray70")
abline(v=145, lwd=2, col="gray70")
abline(v=66, lwd=2, col="gray70")
box(lwd=0.6)
colnames(pd.data)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Mosasauroidea"], 0)
polygon (coordinates.x, coordinates.y, col = "#FF8300", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Rhynchocephalia"], 0)
polygon (coordinates.x, coordinates.y, col = "#c061ff", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Thalattosuchia"], 0)
polygon (coordinates.x, coordinates.y, col = "blue", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Pantestudines"], 0)
polygon (coordinates.x, coordinates.y, col = "#009ccc", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Other"], 0)
polygon (coordinates.x, coordinates.y, col = "gray70", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Thalattosauria"], 0)
polygon (coordinates.x, coordinates.y, col = "#FFD300", border = NA)
coordinates.x <- c(midpoints[1], midpoints,midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Sauropterygia"], 0)
polygon (coordinates.x, coordinates.y, col = "#19D27E", border = NA)
coordinates.x <- c(midpoints[1], midpoints, midpoints [nbins])
coordinates.y <- c(0, relative.disparity[, "Ichthyosauromorpha"], 0)
polygon (coordinates.x, coordinates.y, col = "#FF2626", border = NA)
lines(midpoints, relative.disparity[,1], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,2], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,3], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,4], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,5], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,6], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,7], lty=1, lwd=0.8,col = "white")
lines(midpoints, relative.disparity[,8], lty=1, lwd=0.8,col = "white")
xAxisPeriods()
dev.copy(pdf,"Partial_disparity_new.pdf", width=6, height=3.5)
dev.off()
