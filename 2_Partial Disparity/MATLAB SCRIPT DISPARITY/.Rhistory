plotTree.barplot(my.equal.timetree.minMax, my.size.data,
args.barplot=list(xlab="Trunk(cm)", col="gray"))
ace.fit <- fastAnc(my.equal.timetree.minMax, my.size.data,
vars=TRUE,
CI=TRUE)
print(ace.fit)
#plot tree and visualise inferred values for nodes
plot(my.equal.timetree.minMax)
nodelabels()
print(ace.fit)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.minMax,ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
print(ace.fit)
ace.fit.APE <- ace(my.equal.timetree.minMax, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
my.equal.timetree.minMax1 <- as(my.equal.timetree.minMax, "phylo4")
my.equal.timetree.minMax1 <- as(my.equal.timetree.minMax, "phylo")
ace.fit.APE <- ace(my.equal.timetree.minMax1, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
my.equal.timetree.minMax1 <- as(my.equal.timetree.minMax, "phylo")
ace.fit.APE <- ace(my.equal.timetree.minMax1, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
class(tree)
class(my.equal.timetree.minMax)
ace.fit.APE <- ace(my.equal.timetree.minMax, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
class(my.size.data)
ace.fit.APE <- ace(my.equal.timetree.minMax, my.size.data,
type = "continuous",
method = "REML",
CI = TRUE)
ace.plot <- contMap(my.equal.timetree.minMax, my.size.data, plot=FALSE)
ace.plot
plot(ace.plot, type="phylogram")
plot(ace.plot,
type="phylogram",
cex=0.5)
plot(ace.plot,
type="phylogram",
cex=0.1)
phenogram(my.equal.timetree.minMax, my.size.data,
spread.labels = TRUE)
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE))
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE,
cex.tip=1))
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE,
cex=1))
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE,
cex=2))
plot(ace.plot,
type="phylogram")
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
),
cex = 0.75)
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.75))
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.05))
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.05,
font = 3))
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.05,
font = 1))
#plot the phylogenetic tree and the size data as a bar chart to see if plot matches the data
plotTree.barplot(my.equal.timetree.FAD, my.size.data,
args.barplot=list(xlab="Trunk(cm)", col="gray"))
ace.fit <- fastAnc(my.equal.timetree.FAD, my.size.data,
vars=TRUE,
CI=TRUE)
print(ace.fit)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.8,
lwd=1)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
#Visualise ancestral character reconstruction plotted on phylogeny
ace.plot <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot
plot(ace.plot,
type="phylogram")
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plotTree(ace.plot,
ftype="i",
fsize=0.6,
lwd=1)
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.05,
font = 1))
my.equal.timetree.FAD$root.time
#Select neck ratio data and transform it into a vector
my.reckratio.data <- as.vector(my.data[,c('Neck_ratio')])
names(my.neckratio.data) <- rownames(my.data) # add names to the vector of sizes
#Select neck ratio data and transform it into a vector
my.neckratio.data <- as.vector(my.data[,c('Neck_ratio')])
names(my.neckratio.data) <- rownames(my.data) # add names to the vector of sizes
my.neckratio.data
#simple barplot NECK RATIO
plotTree.barplot(tree, my.size.data,
args.barplot=list(xlab="Trunk length (cm)",
col="gray"))
# Clearing workspace
rm(list=ls() )
tree<-read.tree(file="Sauropterygia.tre")
tree
plotTree(tree,ftype="i",
fsize=0.6,
lwd=1)
class(tree)
tree$edge.length    #this will say NULL if the tree doesn't have branch lengths
#Load data for tree
#-----------------#
my.data <- read.csv("Sauropterygians_trunk_and_neck.csv",
header=T,
row.names = 1)
my.data
#check if the order in taxa and data file is the same
tree$tip.label
rownames(my.data)
identical(tree$tip.label,rownames(my.data))
#If output is ‘FALSE’ then rearrange the rows of the data frame to match the order of tip
my.data <- my.data[match(tree$tip.label,rownames(my.data)),]
my.data
#check if the order in taxa and data file is the same
tree$tip.label
rownames(my.data)
identical(tree$tip.label,rownames(my.data))
#Add geological data
my.geological.data <- my.data[,c('FAD','LAD')]
my.geological.data
my.equal.timetree.FAD <-timePaleoPhy(tree, my.geological.data,
type="equal",
vartime=5,
ntrees=1,
dateTreatment="firstLast",
plot=TRUE)
my.equal.timetree.FAD
plotTree(my.equal.timetree.FAD,ftype="i",
fsize=0.6,
lwd=1)
my.equal.timetree.FAD <-timePaleoPhy(tree, my.geological.data,
type="equal",
vartime=1,   #time variable
ntrees=1,
dateTreatment="firstLast",
plot=TRUE)
my.equal.timetree.FAD
plotTree(my.equal.timetree.FAD,ftype="i",
fsize=0.6,
lwd=1)
my.equal.timetree.FAD <-timePaleoPhy(tree, my.geological.data,
type="equal",
vartime=5,   #time variable
ntrees=1,
dateTreatment="firstLast",
plot=TRUE)
my.equal.timetree.FAD
#check the root time
my.equal.timetree.FAD$root.time
#Select TRUNK length data and transform it into a vector
my.size.data <- as.vector(my.data[,c('Trunk')])
names(my.size.data) <- rownames(my.data) # add names to the vector of sizes
my.size.data
#simple barplot TRUNK
plotTree.barplot(tree, my.size.data,
args.barplot=list(xlab="Trunk length (cm)",
col="gray"))
#Select NECK RATIO data and transform it into a vector
my.neckratio.data <- as.vector(my.data[,c('Neck_ratio')])
names(my.neckratio.data) <- rownames(my.data) # add names to the vector of sizes
my.neckratio.data
#simple barplot NECK RATIO
plotTree.barplot(tree, my.size.data,
args.barplot=list(xlab="Trunk length (cm)",
col="gray"))
#simple barplot NECK RATIO
plotTree.barplot(tree, my.neckratio.data,
args.barplot=list(xlab="Trunk length (cm)",
col="gray"))
#Select TRUNK length data and transform it into a vector
my.trunk.data <- as.vector(my.data[,c('Trunk')])
names(my.trunk.data) <- rownames(my.data) # add names to the vector of sizes
my.trunk.data
#simple barplot TRUNK
plotTree.barplot(tree, my.trunk.data,
args.barplot=list(xlab="Trunk length (cm)",
col="gray"))
#Select NECK RATIO data and transform it into a vector
my.neckratio.data <- as.vector(my.data[,c('Neck_ratio')])
names(my.neckratio.data) <- rownames(my.data) # add names to the vector of sizes
my.neckratio.data
#simple barplot NECK RATIO
plotTree.barplot(tree, my.neckratio.data,
args.barplot=list(xlab="Neck ratio",
col="gray"))
ace.fit <- fastAnc(my.equal.timetree.FAD, my.trunk.data,
vars=TRUE,
CI=TRUE)
print(ace.fit)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
print(ace.fit)
class(my.equal.timetree.FAD)
class(my.trunk.data)
ace.fit.APE <- ace(my.equal.timetree.FAD, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
#Plot the reconstructed values in the phylogeny
ace.plot <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot
plot(ace.plot,
type="phylogram")
ace.plot <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot
plot(ace.plot,
type="phylogram")
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.05))
ace.fit <- fastAnc(my.equal.timetree.FAD, my.neckratio.data,
vars=TRUE,
CI=TRUE)
print(ace.fit)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
print(ace.fit)
ace.plot <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot
plot(ace.plot,
type="phylogram")
ace.fit.trunk <- fastAnc(my.equal.timetree.FAD, my.trunk.data,
vars=TRUE,
CI=TRUE)
print(ace.fit.trunk)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels(ace.fit.trunk)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
print(ace.fit.trunk)
ace.fit.APE <- ace(my.equal.timetree.FAD, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
ace.fit.APE
#ERROR SAYS THAT object "phy" is not of class "phylo", BUT IT IS A CLASS PHYLO...
class(my.equal.timetree.FAD)
ace.plot <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot
ace.plot.trunk <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot.trunk
plot(ace.plot.trunk,
type="phylogram")
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE,
cex = 0.05))
ace.fit.neckR <- fastAnc(my.equal.timetree.FAD, my.neckratio.data,
vars=TRUE,
CI=TRUE)
print(ace.fit.neckR)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
print(ace.fit.neckR)
ace.plot <- contMap(my.equal.timetree.FAD, my.neckratio.data,
plot=FALSE)
ace.plot.neckR <- contMap(my.equal.timetree.FAD, my.neckratio.data,
plot=FALSE)
ace.plot.neckR
plot(ace.plot.neckR,
type="phylogram")
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels(ace.fit.neckR,
cex=0.1)   #PROBLEM! HERE THE LABELS ARE STILL THOSE OF THE TRUNK
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()   #PROBLEM! HERE THE LABELS ARE STILL THOSE OF THE TRUNK
ace.fit.neckR <- fastAnc(my.equal.timetree.FAD, my.neckratio.data,
vars=TRUE,
CI=TRUE)
print(ace.fit.neckR)
ace.plot.neckR <- contMap(my.equal.timetree.FAD, my.neckratio.data,
plot=FALSE)
ace.plot.neckR
plot(ace.plot.neckR,
type="phylogram")
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),
x.lim=(255,66))
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),   #this reverses the color used for lower and higuer values
x.lim=(255,66)
)
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),   #this reverses the color used for lower and higuer values
x.lim=c(255,66)
)
geoscalePhylo(tree=ace.plot.neckR,
units=c("Period", "Epoch"),
boxes="Epoch", # Grey boxes for epochs
ranges=F,
type="phylogram",
tick.scale = 20, # Time scale resolution.
cex.tip=0.5, # Size of tip labels.
cex.ts=0.5, # Size of time scale labels.
cex.age=0.5, # Size of Age labels.
width=0.8,  # Width of edges.
x.lim=c(-70,330), # Range of plot
quat.rm=TRUE
)
geoscalePhylo(tree=ace.plot.neckR,
ages=my.geological.data,
units=c("Period", "Epoch"),
boxes="Epoch", # Grey boxes for epochs
ranges=TRUE,
type="phylogram",
tick.scale = 20, # Time scale resolution.
cex.tip=0.5, # Size of tip labels.
cex.ts=0.5, # Size of time scale labels.
cex.age=0.5, # Size of Age labels.
width=0.8,  # Width of edges.
x.lim=c(-70,330), # Range of plot
quat.rm=TRUE
)
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),   #this reverses the color used for lower and higuer values
label.offset = 0.8,
cex = 0.5
)
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE, #this reverses the color used for lower and higuer values
use.edge.length = TRUE, #this doesn't seem to change anything!
cex = 0.05)) #this doesn't seem to change anything!
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),   #this reverses the color used for lower and higuer values
cex = 0.5 #this doesn't seem to change anything!
)
#Select TRUNK length data and transform it into a vector
my.trunk.data <- as.vector(log(my.data[,c('Trunk')]))  #Add or not log before (my.data to long-transform
names(my.trunk.data) <- rownames(my.data) # add names to the vector of sizes
my.trunk.data
#simple barplot TRUNK
plotTree.barplot(tree, my.trunk.data,
args.barplot=list(xlab="Trunk length (cm)",
col="gray"))
ace.fit.trunk <- fastAnc(my.equal.timetree.FAD, my.trunk.data,
vars=TRUE,
CI=TRUE)
print(ace.fit.trunk)
#plot tree and visualise inferred values for nodes
plotTree(my.equal.timetree.FAD,
ftype="i",
fsize=0.6,
lwd=1)
nodelabels()
ace.fit.APE <- ace(my.equal.timetree.FAD, my.size.data,
type = "continuous",
method = "ML",
CI = TRUE)
ace.plot.trunk <- contMap(my.equal.timetree.FAD, my.size.data,
plot=FALSE)
ace.plot.trunk
plot(ace.plot.trunk,
type="phylogram")
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),   #this reverses the color used for lower and higuer values
cex = 0.5 #this doesn't seem to change anything!
)
print(ace.fit.trunk)
ace.plot.trunk <- contMap(my.equal.timetree.FAD, my.trunk.data,
plot=FALSE)
ace.plot.trunk
plot(ace.plot.trunk,
type="phylogram")
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.trunk,
type="phylogram",
invert=TRUE)) #this reverses the color used for lower and higuer values
plot(setMap(ace.plot.neckR,
type="phylogram",
invert=TRUE),   #this reverses the color used for lower and higuer values
cex = 0.5 #this doesn't seem to change anything!
)
setwd("~/Dropbox/PhD Bristol_MESOZOIC MARINE REPTILES/CHAPTER 5_Morphospace/Morphospace_Analysis 2020June/PARTIAL DISPARITY/MATLAB SCRIPT DISPARITY")
rm(list=ls()) # Clears memory
install.packages("matconv")
library(matconv)
